unit abmJugadores;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, lo_arbolbinario, la_arbolbinario,
  Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TFormABMJugadores = class(TForm)
    grilla: TStringGrid;
    RadioGroup1: TRadioGroup;
    RadioListadoGeneral: TRadioButton;
    RadioPorCartones: TRadioButton;
    RadioButton3: TRadioButton;
    RadioButton4: TRadioButton;

    //propios
    procedure CargarGrilla();
    Procedure SetearHeaders();
    procedure FormCreate(Sender: TObject);



  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormABMJugadores: TFormABMJugadores;

implementation

{$R *.dfm}

procedure TFormAbmJugadores.CargarGrilla();
var
  //pos: tPosHash;
  i: integer;
  reg: tRegDatos;
begin
  SetearHeaders;
  AbrirMe_Archivos(MeJugadores);

  if RadioListadoGeneral.Checked then
  begin
    for i := 0 to Ultimo_Archivos(MeJugadores) do
      begin
        ObtenerInfoMe_Archivos(MeJUGADORES);

      end;
  end;

  If Total (MeJuego)>0 then
    Begin
      Begin
        grilla.RowCount:=1;
        SetearHeaders;
        Pos:=Primero (MeJuego);
        While pos <> _posnula do
          Begin
            CapturarInfoHash(MeJuego,pos,Reg);
            grilla.RowCount:=grilla.RowCount+1;
            AgregarReglon (reg,grilla.RowCount-1);
            pos:=Proximo(MeJuego,pos);
          End;
    End;

end;
end;

Procedure TFormABMJugadores.SetearHeaders();
Begin
  with grilla do
  Begin
  // Título de las columnas
    ColWidths[0] := Canvas.TextWidth('xxxxxxxxxxxxxxxxxxxx');
    ColWidths[1] := Canvas.TextWidth('xxxxxxxxxxxxxxxxxxxx');
    ColWidths[2] := Canvas.TextWidth('xxxxxxxxxxxxxxxxxxxx');
    ColWidths[3] := Canvas.TextWidth('xxxxxxxxxxxxxxxxxxxx');
    ColWidths[4] := Canvas.TextWidth('xxxxxxxxxxxxxxxxxxxx');
    Cells[0, 0] := 'ID';
    Cells[1, 0] := 'MAIL';
    Cells[2, 0] := 'CLAVE';
    Cells[3, 0] := 'ESTADO';
    Cells[4, 0] := 'NOMBRE';
    //Cells[3, 0] := 'APELLIDO';
    //Cells[4, 0] := 'TEL';
  End;
End;

Procedure TFormABMJugadores.AgregarReglon (RD: tRegDatos; IndexRenglon:Integer);
Begin
  If RD.ocupado then
  Begin
    with grilla do
    Begin
      Cells[0, IndexRenglon] := RD.nombreEvento;
      Cells[1, IndexRenglon] := TRttiEnumerationType.GetName( RD.estado);
      Cells[2, IndexRenglon] := IntToStr(RD.TotalCartonesVendidos);
      //Cells[3, IndexRenglon] := Rh.apellidos;
      //Cells[4, IndexRenglon] := Rh.telefono;
      FixedRows:=1;
    End;
  End;
End;

procedure TFormABMJugadores.FormCreate(Sender: TObject);
begin
  LO_ArbolBinario.CrearMe_Indice(MeID, 'CONTROLID.CON', 'DATOSID.DAT');
  LO_ArbolBinario.CrearMe_Indice(MeNICK, 'CONTROLNICK.CON', 'DATOSNICK.DAT');
  LO_ArbolBinario.CrearMe_Archivos(MeJugadores, 'CONTROLJUGADORES.CON', 'DATOSJUGADORES.DAT');
  InsertarAdminCuandoMEVacio();
end;

end.
